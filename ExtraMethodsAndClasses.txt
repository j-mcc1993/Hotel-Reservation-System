———————————————————————————————————————————————————————————————————
public void initializeHashMap() {
        String date = "";
        for (int i = 1; i < 13; i++) {
            date = i+"/";
            if (i==2) {
                for (int x = 1; x<29; x++) {
                    date += x+"/2014";
                    calendar.put(date, false);
                    date = i+"/";
                }
            }
            else if (i==1||i==3||i==5||i==7||i==8||i==10||i==12) {
                for (int y = 1; y < 32; y++) {
                    date += y+"/2014";
                    calendar.put(date, false);
                    date = i+"/";
                }
            } else {
                for (int u = 1; u < 31; u++) {
                    date += u+"/2014";
                    calendar.put(date, false);
                    date = i+"/";
                }
            }
        }
    }
———————————————————————————————————————————————————————————————————
for (int i = 0; i < room_list.length; i++) {
            if (i < 10) {
                room_list[i] = new Single(i+100);
            }
            else if (i < 20) {
                room_list[i] = new Double(i+190);
            }
            else if (i < 30) {
                room_list[i] = new Suite(i+280);
            }
            else if (i < 40) {
                room_list[i] = new Honeymoon(i+370);
            }
        }
———————————————————————————————————————————————————————————————————
	initialize();
        for (int i = 0; i < reservation_list.size(); i++) {
            System.out.println(reservation_list.get(i).getInfo());
        }
        System.out.println(room_list[0].rnum);
        System.out.println(room_list[0].isAvailable("1/12/2014"));
        close();
———————————————————————————————————————————————————————————————————
	room_list = new AbstractRoom[8];
	reservation_list = new ArrayList<Reservation>();
	for (int i = 0; i < room_list.length; i++) {
            if (i < 2) {
                room_list[i] = new Single(i);
            }
            else if (i < 4) {
                room_list[i] = new Double(i);
            }
            else if (i < 6) {
                room_list[i] = new Suite(i);
            }
            else if (i < 8) {
                room_list[i] = new Honeymoon(i);
            }
        }
	close();
———————————————————————————————————————————————————————————————————
	App a = new App();
        initialize();
        String name = "Name";
        String sdate = "1/1/2014";
        Customer[] cust_arr = new Customer[5];
        for (int i = 0; i < 5; i++) {
            cust_arr[i] = new Customer(name+i,"(650)999-9999","customer@gmail.com");
            reservation_list.add(new Reservation(cust_arr[i], room_list[i], sdate));
            sdate = a.getNextDate(sdate);
        }
        close();
———————————————————————————————————————————————————————————————————
	App a = new App();
        initialize();
        String name = "Name";
        String[] sdate = {"1/1/2014", "1/2/2014"};
        Customer[] cust_arr = new Customer[5];
        for (int i = 0; i < 5; i++) {
            cust_arr[i] = new Customer(name+i,"(650)999-9999","customer@gmail.com");
            reservation_list.add(new Reservation(cust_arr[i], room_list[i], sdate));
            //sdate[0] = a.getNextDate(sdate[0]);
        }
        close();
———————————————————————————————————————————————————————————————————
if (type.equals("Single")) {
            for (int i = 0; i < 2; i++) {
                if (room_list[i].isAvailable(date)) {
                    for (int u = 1; u <= nights; nights--) {
                        if (u == nights) return room_list[i];
                        date = getNextDate(date);
                        if (!room_list[i].isAvailable(date)) break;
                    }
                }
            }
            if (range != 0) {
                range -= 1;
                return nextAvailable(type, getNextDate(date), range, nights);
            }
        }
        if (type.equals("Double")) {
            for (int i = 2; i < 4; i++) {
                if (room_list[i].isAvailable(date)) {
                    return room_list[i];
                }
            }
            if (range != 0) {
                range -= 1;
                return nextAvailable(type, getNextDate(date), range, nights);
            }
        }
        if (type.equals("Suite")) {
            for (int i = 4; i < 6; i++) {
                if (room_list[i].isAvailable(date)) {
                    return room_list[i];
                }
            }
            if (range != 0) {
                range -= 1;
                return nextAvailable(type, getNextDate(date), range, nights);
            }
        }
        if (type.equals("Honeymoon Suite")) {
            for (int i = 4; i < 6; i++) {
                if (room_list[i].isAvailable(date)) {
                    return room_list[i];
                }
            }
            if (range != 0) {
                range -= 1;
                return nextAvailable(type, getNextDate(date), range, nights);
            }
        }
        return null;
———————————————————————————————————————————————————————————————————
if (month == 2) {
            if ((day+1) == 29) {
                response = "3/1/2014";
                return response;
            } else {
                response = "2/"+ (day+1) + "/2014";
                return response;
            }
        } 
        else if (month==1||month==3||month==5||month==7||month==8||month==10||month==12) {
            if ((day+1) == 32) {
                if (month == 12) {
                    return "1/1/2015";
                } else {
                    response = (month+1) + "/1/2014";
                    return response;
                }
            } else {
                response = month + "/" + (day+1) + "/2014";
                return response;
            }
        } 
        else {
            if ((day+1) == 31) {
                response = (month+1) + "/1/2014";
                return response;
            } else {
                response = month + "/" + (day+1) + "/2014";
                return response;
            }
        }
———————————————————————————————————————————————————————————————————
	App a = new App();
        initialize();
        for (int i = 0; i < reservation_list.size(); i++) {
            System.out.println(reservation_list.get(i).getInfo()+"\n\n");
        }
        System.out.println("answer: "+a.nextAvailable("Double", "1/1/2014",7, 4));
———————————————————————————————————————————————————————————————————
public String nextAvailable(String type, String date, int range, int nights) {
        int start = 0;
        if (type.equals("Single")) start = 0;
        if (type.equals("Double")) start = 2;
        if (type.equals("Suite")) start = 4;
        if (type.equals("Honeymoon Suite")) start = 6;

        for (int i = start; i < start+2; i++) {
            String test = date;
            if (room_list[i].isAvailable(date)) {
                System.out.println("OuterIf: "+room_list[i].rnum + ": " + date);
                if (nights == 1) return room_list[i].rnum + ": " + date;
                for (int u = 1; u < nights; u++) {
                    System.out.println("Test initial: "+test);
                    test = getNextDate(test);
                    System.out.println("Test post: "+test);
                    System.out.println(u);
                    if (!room_list[i].isAvailable(test)) {
                        System.out.println("Unavailable: "+room_list[i].rnum + ": " + test);
                        break;
                    }
                    if (u == nights-1) {
                        System.out.println("Hello");
                        return room_list[i].rnum + ": " + date;
                    }
                }
            }
        }
        if (range != 0) {
            range -= 1;
            return nextAvailable(type, getNextDate(date), range, nights);
        }
        return null;
    }
———————————————————————————————————————————————————————————————————
	App a = new App();
        initialize();
        for (int i = 0; i < reservation_list.size(); i++) {
            System.out.println(reservation_list.get(i).getInfo()+"\n\n");
        }
        for (int i = 0; i < room_list.length; i++) {
            System.out.println(room_list[i].getInfo() + "\n\n");
        }
        System.out.println("answer: "+a.nextAvailable("Double", "1/1/2014",7, 4));
        a.deleteReservation(reservation_list.get(2));
        System.out.println(room_list[2].isAvailable("1/1/2014"));


	datebox.setSelected("Selecte a Date");
        typebox.setSelected(“Select a Room Type”);
